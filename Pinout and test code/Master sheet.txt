For Fan Control:
⦁	Pin 3: Used for PWM output.
⦁	Pin 9: Used to toggle on and off, simulating a switch operation.
Test Code:
const int switchPin = 9;   // Switch control pin, changed from 10 to 9
const int pwmPin = 3;      // PWM output pin

void setup() {
  pinMode(switchPin, OUTPUT);  // Set the switch pin as output
  pinMode(pwmPin, OUTPUT);     // Set the PWM pin as output
  
  Serial.begin(9600);          // Start serial communication for debugging
}

void loop() {
  // Toggle the switch on
  digitalWrite(switchPin, HIGH);
  Serial.println("Switch is ON");
  delay(1000); // Switch is on for 1 second
  
  // Toggle the switch off
  digitalWrite(switchPin, LOW);
  Serial.println("Switch is OFF");
  delay(1000); // Switch is off for 1 second

  // Send a constant PWM signal to pin 3
  analogWrite(pwmPin, 128); // Send a mid-range PWM signal
  Serial.println("PWM signal sent on Pin 3");
  delay(2000); // Wait for 2 seconds to allow observation
}	

For Winder Motor:
⦁	Pin 5: Used for PWM output to control motor speed.
⦁	Pin 7: Used as a switch to turn the motor on and off.
Test Code:

const int switchPin = 7;  // Switch control pin
const int pwmPin = 5;     // PWM output pin for motor speed control

void setup() {
  pinMode(switchPin, OUTPUT);  // Set the switch pin as output
  pinMode(pwmPin, OUTPUT);     // Set the PWM pin as output
  
  Serial.begin(9600);          // Start serial communication for debugging
}

void loop() {
  // Turn the switch on to enable the motor
  digitalWrite(switchPin, HIGH);
  Serial.println("Motor is ON");

  // Send a PWM signal to control motor speed
  analogWrite(pwmPin, 128); // 50% duty cycle to run motor at half speed
  delay(2000); // Motor runs for 2 seconds

  // Turn the switch off to disable the motor
  digitalWrite(switchPin, LOW);
  Serial.println("Motor is OFF");
  
  // Stop the motor completely by setting PWM to 0
  analogWrite(pwmPin, 0); 
  delay(2000); // Motor is off for 2 seconds
}

For Solid State Relay (SSR) Control:
⦁	Pin 15: Used for triggering the SSR, which controls the on/off state of the load.
Test Code:
const int ssrPin = 15; // Connect the SSR + to Arduino pin 15

void setup() {
  pinMode(ssrPin, OUTPUT); // Set the digital pin as output
}

void loop() {
  digitalWrite(ssrPin, HIGH); // Turn on SSR (and the connected load)
  delay(1000);                // Keep it on for 1 second
  digitalWrite(ssrPin, LOW);  // Turn off SSR
  delay(1000);                // Keep it off for 1 second
}

For Thermistor:
 
⦁	Pin A0: For thermistor reading
Test Code:

#include <thermistor.h>  // Ensure this matches exactly with the library file name

const int switchPin = 9;    // Switch control pin
const int pwmPin = 3;       // PWM output pin
const int thermistorPin = A0;  // Analog pin connected to the thermistor

// Initialize the thermistor object, ensure parameters are correct as per your thermistor's specification
thermistor therm(thermistorPin, 80);  

void setup() {
  pinMode(switchPin, OUTPUT); // Set the switch pin as output
  pinMode(pwmPin, OUTPUT);    // Set the PWM pin as output
  digitalWrite(switchPin, HIGH); // Turn on the switch

  Serial.begin(9600); // Start serial communication at 9600 baud rate
  Serial.println("Setup complete. Switch is ON.");
}

void loop() {
  // Read temperature from the thermistor
  float temperature = therm.analog2temp();
  Serial.print("Temperature: ");
  Serial.print(temperature);
  Serial.println(" C");

  analogWrite(pwmPin, 128); // Send a mid-range PWM signal

  delay(1000); // Delay for one second between readings to avoid flooding the serial monitor
}
For Speaker:
⦁	Pin 2: For speaker output.

Test Code:
const int speakerPin = 2;  // Speaker connected to pin 10

void setup() {
  pinMode(speakerPin, OUTPUT);  // Set pin 10 as an output
}

void loop() {
  // Generate a square wave manually
  for (int i = 0; i < 100; i++) {  // Number of cycles
    digitalWrite(speakerPin, HIGH);  // Set the speaker pin high
    delayMicroseconds(500);          // High for 500 microseconds (1kHz tone)
    digitalWrite(speakerPin, LOW);   // Set the speaker pin low
    delayMicroseconds(500);          // Low for 500 microseconds (1kHz tone)
  }
  delay(1000);  // Wait for 1 second between beeps
}

For Inductive Switch:
⦁	Pin 6: For switch control

Test Code:
const int inductiveSwitchPin = 6;  // Inductive switch connected to pin 6

void setup() {
  pinMode(inductiveSwitchPin, INPUT);  // Set pin 6 as an input
  Serial.begin(9600);                  // Start serial communication at 9600 baud
}

void loop() {
  int switchState = digitalRead(inductiveSwitchPin);  // Read the state of the inductive switch

  if (switchState == HIGH) {  // Check if the switch is active (pressed)
    Serial.println("Inductive Switch Pressed");  // Print message to the Serial Monitor
  } else {
    Serial.println("Inductive Switch Released");  // Print message to the Serial Monitor when not pressed
  }

  delay(500);  // Add a short delay to reduce bouncing and flooding the serial output
}